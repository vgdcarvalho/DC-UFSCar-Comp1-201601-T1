// Generated from D:/Projects/GitHub_locals/DC-UFSCar-Comp1-201601-T1/proj/src/t1\Lua.g4 by ANTLR 4.5.1
package t1;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LuaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, NOME=50, CADEIA_NORMAL=51, CADEIA_CHAR=52, 
		INTEGER=53, FLOAT=54, COMENTARIO=55, WS=56, IGNORADOS=57;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"NOME", "CADEIA_NORMAL", "CADEIA_CHAR", "INTEGER", "FLOAT", "Digito", 
		"Caracter", "COMENTARIO", "WS", "IGNORADOS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'='", "'do'", "'end'", "'while'", "'repeat'", "'until'", 
		"'if'", "'then'", "'elseif'", "'else'", "'for'", "','", "'in'", "'funcion'", 
		"'local'", "'function'", "'return'", "'break'", "'.'", "':'", "'nil'", 
		"'false'", "'true'", "'...'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
		"'or'", "'and'", "'<'", "'>'", "'<='", "'>='", "'~='", "'=='", "'..'", 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'not'", "'#'", "'~'", "'^'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "NOME", "CADEIA_NORMAL", "CADEIA_CHAR", "INTEGER", "FLOAT", 
		"COMENTARIO", "WS", "IGNORADOS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	   public static String grupo="551805 e 551945";


	public LuaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lua.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2;\u018a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r"+
		"\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3"+
		"\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3"+
		"\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3$\3"+
		"$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3"+
		"-\3-\3.\3.\3/\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\5\63\u012c"+
		"\n\63\3\63\3\63\3\63\7\63\u0131\n\63\f\63\16\63\u0134\13\63\3\64\3\64"+
		"\7\64\u0138\n\64\f\64\16\64\u013b\13\64\3\64\3\64\3\65\3\65\7\65\u0141"+
		"\n\65\f\65\16\65\u0144\13\65\3\65\3\65\3\66\6\66\u0149\n\66\r\66\16\66"+
		"\u014a\3\67\6\67\u014e\n\67\r\67\16\67\u014f\3\67\3\67\7\67\u0154\n\67"+
		"\f\67\16\67\u0157\13\67\3\67\3\67\6\67\u015b\n\67\r\67\16\67\u015c\5\67"+
		"\u015f\n\67\38\38\39\39\3:\3:\3:\3:\7:\u0169\n:\f:\16:\u016c\13:\3:\5"+
		":\u016f\n:\3:\3:\3:\3:\3;\3;\3;\3;\3<\3<\3<\3<\7<\u017d\n<\f<\16<\u0180"+
		"\13<\3<\5<\u0183\n<\3<\3<\5<\u0187\n<\3<\3<\2\2=\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o\2q\2s9u:w;\3\2\6\4\2"+
		"$$^^\4\2C\\c|\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u0197\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2"+
		"e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2s\3\2\2\2\2u\3"+
		"\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5{\3\2\2\2\7}\3\2\2\2\t\u0080\3\2\2\2\13"+
		"\u0084\3\2\2\2\r\u008a\3\2\2\2\17\u0091\3\2\2\2\21\u0097\3\2\2\2\23\u009a"+
		"\3\2\2\2\25\u009f\3\2\2\2\27\u00a6\3\2\2\2\31\u00ab\3\2\2\2\33\u00af\3"+
		"\2\2\2\35\u00b1\3\2\2\2\37\u00b4\3\2\2\2!\u00bc\3\2\2\2#\u00c2\3\2\2\2"+
		"%\u00cb\3\2\2\2\'\u00d2\3\2\2\2)\u00d8\3\2\2\2+\u00da\3\2\2\2-\u00dc\3"+
		"\2\2\2/\u00e0\3\2\2\2\61\u00e6\3\2\2\2\63\u00eb\3\2\2\2\65\u00ef\3\2\2"+
		"\2\67\u00f1\3\2\2\29\u00f3\3\2\2\2;\u00f5\3\2\2\2=\u00f7\3\2\2\2?\u00f9"+
		"\3\2\2\2A\u00fb\3\2\2\2C\u00fe\3\2\2\2E\u0102\3\2\2\2G\u0104\3\2\2\2I"+
		"\u0106\3\2\2\2K\u0109\3\2\2\2M\u010c\3\2\2\2O\u010f\3\2\2\2Q\u0112\3\2"+
		"\2\2S\u0115\3\2\2\2U\u0117\3\2\2\2W\u0119\3\2\2\2Y\u011b\3\2\2\2[\u011d"+
		"\3\2\2\2]\u011f\3\2\2\2_\u0123\3\2\2\2a\u0125\3\2\2\2c\u0127\3\2\2\2e"+
		"\u012b\3\2\2\2g\u0135\3\2\2\2i\u013e\3\2\2\2k\u0148\3\2\2\2m\u015e\3\2"+
		"\2\2o\u0160\3\2\2\2q\u0162\3\2\2\2s\u0164\3\2\2\2u\u0174\3\2\2\2w\u0186"+
		"\3\2\2\2yz\7=\2\2z\4\3\2\2\2{|\7?\2\2|\6\3\2\2\2}~\7f\2\2~\177\7q\2\2"+
		"\177\b\3\2\2\2\u0080\u0081\7g\2\2\u0081\u0082\7p\2\2\u0082\u0083\7f\2"+
		"\2\u0083\n\3\2\2\2\u0084\u0085\7y\2\2\u0085\u0086\7j\2\2\u0086\u0087\7"+
		"k\2\2\u0087\u0088\7n\2\2\u0088\u0089\7g\2\2\u0089\f\3\2\2\2\u008a\u008b"+
		"\7t\2\2\u008b\u008c\7g\2\2\u008c\u008d\7r\2\2\u008d\u008e\7g\2\2\u008e"+
		"\u008f\7c\2\2\u008f\u0090\7v\2\2\u0090\16\3\2\2\2\u0091\u0092\7w\2\2\u0092"+
		"\u0093\7p\2\2\u0093\u0094\7v\2\2\u0094\u0095\7k\2\2\u0095\u0096\7n\2\2"+
		"\u0096\20\3\2\2\2\u0097\u0098\7k\2\2\u0098\u0099\7h\2\2\u0099\22\3\2\2"+
		"\2\u009a\u009b\7v\2\2\u009b\u009c\7j\2\2\u009c\u009d\7g\2\2\u009d\u009e"+
		"\7p\2\2\u009e\24\3\2\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7n\2\2\u00a1\u00a2"+
		"\7u\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7h\2\2\u00a5"+
		"\26\3\2\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7u\2\2\u00a9"+
		"\u00aa\7g\2\2\u00aa\30\3\2\2\2\u00ab\u00ac\7h\2\2\u00ac\u00ad\7q\2\2\u00ad"+
		"\u00ae\7t\2\2\u00ae\32\3\2\2\2\u00af\u00b0\7.\2\2\u00b0\34\3\2\2\2\u00b1"+
		"\u00b2\7k\2\2\u00b2\u00b3\7p\2\2\u00b3\36\3\2\2\2\u00b4\u00b5\7h\2\2\u00b5"+
		"\u00b6\7w\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7k\2\2"+
		"\u00b9\u00ba\7q\2\2\u00ba\u00bb\7p\2\2\u00bb \3\2\2\2\u00bc\u00bd\7n\2"+
		"\2\u00bd\u00be\7q\2\2\u00be\u00bf\7e\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1"+
		"\7n\2\2\u00c1\"\3\2\2\2\u00c2\u00c3\7h\2\2\u00c3\u00c4\7w\2\2\u00c4\u00c5"+
		"\7p\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7k\2\2\u00c8"+
		"\u00c9\7q\2\2\u00c9\u00ca\7p\2\2\u00ca$\3\2\2\2\u00cb\u00cc\7t\2\2\u00cc"+
		"\u00cd\7g\2\2\u00cd\u00ce\7v\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7t\2\2"+
		"\u00d0\u00d1\7p\2\2\u00d1&\3\2\2\2\u00d2\u00d3\7d\2\2\u00d3\u00d4\7t\2"+
		"\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7\7m\2\2\u00d7(\3\2"+
		"\2\2\u00d8\u00d9\7\60\2\2\u00d9*\3\2\2\2\u00da\u00db\7<\2\2\u00db,\3\2"+
		"\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7n\2\2\u00df.\3"+
		"\2\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7n\2\2\u00e3"+
		"\u00e4\7u\2\2\u00e4\u00e5\7g\2\2\u00e5\60\3\2\2\2\u00e6\u00e7\7v\2\2\u00e7"+
		"\u00e8\7t\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea\7g\2\2\u00ea\62\3\2\2\2\u00eb"+
		"\u00ec\7\60\2\2\u00ec\u00ed\7\60\2\2\u00ed\u00ee\7\60\2\2\u00ee\64\3\2"+
		"\2\2\u00ef\u00f0\7*\2\2\u00f0\66\3\2\2\2\u00f1\u00f2\7+\2\2\u00f28\3\2"+
		"\2\2\u00f3\u00f4\7]\2\2\u00f4:\3\2\2\2\u00f5\u00f6\7_\2\2\u00f6<\3\2\2"+
		"\2\u00f7\u00f8\7}\2\2\u00f8>\3\2\2\2\u00f9\u00fa\7\177\2\2\u00fa@\3\2"+
		"\2\2\u00fb\u00fc\7q\2\2\u00fc\u00fd\7t\2\2\u00fdB\3\2\2\2\u00fe\u00ff"+
		"\7c\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7f\2\2\u0101D\3\2\2\2\u0102\u0103"+
		"\7>\2\2\u0103F\3\2\2\2\u0104\u0105\7@\2\2\u0105H\3\2\2\2\u0106\u0107\7"+
		">\2\2\u0107\u0108\7?\2\2\u0108J\3\2\2\2\u0109\u010a\7@\2\2\u010a\u010b"+
		"\7?\2\2\u010bL\3\2\2\2\u010c\u010d\7\u0080\2\2\u010d\u010e\7?\2\2\u010e"+
		"N\3\2\2\2\u010f\u0110\7?\2\2\u0110\u0111\7?\2\2\u0111P\3\2\2\2\u0112\u0113"+
		"\7\60\2\2\u0113\u0114\7\60\2\2\u0114R\3\2\2\2\u0115\u0116\7-\2\2\u0116"+
		"T\3\2\2\2\u0117\u0118\7/\2\2\u0118V\3\2\2\2\u0119\u011a\7,\2\2\u011aX"+
		"\3\2\2\2\u011b\u011c\7\61\2\2\u011cZ\3\2\2\2\u011d\u011e\7\'\2\2\u011e"+
		"\\\3\2\2\2\u011f\u0120\7p\2\2\u0120\u0121\7q\2\2\u0121\u0122\7v\2\2\u0122"+
		"^\3\2\2\2\u0123\u0124\7%\2\2\u0124`\3\2\2\2\u0125\u0126\7\u0080\2\2\u0126"+
		"b\3\2\2\2\u0127\u0128\7`\2\2\u0128d\3\2\2\2\u0129\u012c\5q9\2\u012a\u012c"+
		"\7a\2\2\u012b\u0129\3\2\2\2\u012b\u012a\3\2\2\2\u012c\u0132\3\2\2\2\u012d"+
		"\u0131\5q9\2\u012e\u0131\5o8\2\u012f\u0131\7a\2\2\u0130\u012d\3\2\2\2"+
		"\u0130\u012e\3\2\2\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2\u0132\u0130"+
		"\3\2\2\2\u0132\u0133\3\2\2\2\u0133f\3\2\2\2\u0134\u0132\3\2\2\2\u0135"+
		"\u0139\7$\2\2\u0136\u0138\n\2\2\2\u0137\u0136\3\2\2\2\u0138\u013b\3\2"+
		"\2\2\u0139\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013c\3\2\2\2\u013b"+
		"\u0139\3\2\2\2\u013c\u013d\7$\2\2\u013dh\3\2\2\2\u013e\u0142\7)\2\2\u013f"+
		"\u0141\n\2\2\2\u0140\u013f\3\2\2\2\u0141\u0144\3\2\2\2\u0142\u0140\3\2"+
		"\2\2\u0142\u0143\3\2\2\2\u0143\u0145\3\2\2\2\u0144\u0142\3\2\2\2\u0145"+
		"\u0146\7)\2\2\u0146j\3\2\2\2\u0147\u0149\5o8\2\u0148\u0147\3\2\2\2\u0149"+
		"\u014a\3\2\2\2\u014a\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014bl\3\2\2\2"+
		"\u014c\u014e\5o8\2\u014d\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u014d"+
		"\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u0155\7\60\2\2"+
		"\u0152\u0154\5o8\2\u0153\u0152\3\2\2\2\u0154\u0157\3\2\2\2\u0155\u0153"+
		"\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u015f\3\2\2\2\u0157\u0155\3\2\2\2\u0158"+
		"\u015a\7\60\2\2\u0159\u015b\5o8\2\u015a\u0159\3\2\2\2\u015b\u015c\3\2"+
		"\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3\2\2\2\u015e"+
		"\u014d\3\2\2\2\u015e\u0158\3\2\2\2\u015fn\3\2\2\2\u0160\u0161\4\62;\2"+
		"\u0161p\3\2\2\2\u0162\u0163\t\3\2\2\u0163r\3\2\2\2\u0164\u0165\7/\2\2"+
		"\u0165\u0166\7/\2\2\u0166\u016a\3\2\2\2\u0167\u0169\n\4\2\2\u0168\u0167"+
		"\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b"+
		"\u016e\3\2\2\2\u016c\u016a\3\2\2\2\u016d\u016f\7\17\2\2\u016e\u016d\3"+
		"\2\2\2\u016e\u016f\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0171\7\f\2\2\u0171"+
		"\u0172\3\2\2\2\u0172\u0173\b:\2\2\u0173t\3\2\2\2\u0174\u0175\t\5\2\2\u0175"+
		"\u0176\3\2\2\2\u0176\u0177\b;\2\2\u0177v\3\2\2\2\u0178\u0179\7/\2\2\u0179"+
		"\u017a\7/\2\2\u017a\u017e\3\2\2\2\u017b\u017d\n\4\2\2\u017c\u017b\3\2"+
		"\2\2\u017d\u0180\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f"+
		"\u0182\3\2\2\2\u0180\u017e\3\2\2\2\u0181\u0183\7\17\2\2\u0182\u0181\3"+
		"\2\2\2\u0182\u0183\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0187\7\f\2\2\u0185"+
		"\u0187\t\5\2\2\u0186\u0178\3\2\2\2\u0186\u0185\3\2\2\2\u0187\u0188\3\2"+
		"\2\2\u0188\u0189\b<\2\2\u0189x\3\2\2\2\22\2\u012b\u0130\u0132\u0139\u0142"+
		"\u014a\u014f\u0155\u015c\u015e\u016a\u016e\u017e\u0182\u0186\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}